local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LogService = game:GetService("LogService")
local TextService = game:GetService("TextService")

-- Color Palette
local Colors = {
    Background = Color3.fromRGB(25, 25, 35),
    Accent = Color3.fromRGB(52, 93, 169),
    Text = Color3.fromRGB(220, 230, 255),
    ButtonHover = Color3.fromRGB(72, 113, 189),
    ScrollBar = Color3.fromRGB(72, 113, 189),
    Print = Color3.fromRGB(76, 175, 80),
    Warn = Color3.fromRGB(255, 152, 0),
    Error = Color3.fromRGB(244, 67, 54)
}

-- Create Debug GUI
local function CreateDebugUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ModernDebugPanel"
    screenGui.Parent = Players.LocalPlayer.PlayerGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 500, 0, 400)
    mainFrame.Position = UDim2.new(1, 100, 0.5, -200) -- Start off-screen to the right
    mainFrame.BackgroundColor3 = Colors.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.Size = UDim2.new(1, 47, 1, 47)
    shadow.ZIndex = 0
    shadow.Image = "rbxassetid://6015897843"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.5
    shadow.SliceCenter = Rect.new(49, 49, 450, 450)
    shadow.Parent = mainFrame

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = mainFrame

    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 50)
    header.BackgroundColor3 = Colors.Accent
    header.BorderSizePixel = 0
    header.Parent = mainFrame

    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 12)
    headerCorner.Parent = header

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Text = "Debug Console"
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 20
    titleLabel.TextColor3 = Colors.Text
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = header

    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "ScrollFrame"
    scrollFrame.Size = UDim2.new(1, -20, 1, -110)
    scrollFrame.Position = UDim2.new(0, 10, 0, 60)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 5
    scrollFrame.ScrollBarImageColor3 = Colors.ScrollBar
    scrollFrame.Parent = mainFrame

    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = scrollFrame

    local actionFrame = Instance.new("Frame")
    actionFrame.Name = "ActionFrame"
    actionFrame.Size = UDim2.new(1, -20, 0, 40)
    actionFrame.Position = UDim2.new(0, 10, 1, -50)
    actionFrame.BackgroundTransparency = 1
    actionFrame.Parent = mainFrame

    local buttonLayout = Instance.new("UIGridLayout")
    buttonLayout.CellSize = UDim2.new(0.25, -7.5, 1, 0)
    buttonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    buttonLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    buttonLayout.FillDirection = Enum.FillDirection.Horizontal
    buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
    buttonLayout.Parent = actionFrame

    -- Button styles including Copy All button
    local buttonStyles = {
        {Name = "Print", Color = Colors.Print},
        {Name = "Warn", Color = Colors.Warn},
        {Name = "Clear", Color = Colors.Accent},
        {Name = "Copy All", Color = Color3.fromRGB(50, 150, 250)} -- New Copy All button style
    }

    for i, style in ipairs(buttonStyles) do
        local button = Instance.new("TextButton")
        button.Name = style.Name .. "Button"
        button.Text = style.Name
        button.BackgroundColor3 = style.Color
        button.BorderSizePixel = 0
        button.Font = Enum.Font.GothamBold
        button.TextSize = 14
        button.TextColor3 = Colors.Text
        button.LayoutOrder = i
        button.Parent = actionFrame

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = button
    end

    return screenGui
end

-- Function to add a debug message
local function AddDebugMessage(message, messageType)
    local scrollFrame = game.Players.LocalPlayer.PlayerGui.ModernDebugPanel.MainFrame.ScrollFrame

    local messageFrame = Instance.new("Frame")
    messageFrame.BackgroundTransparency = 0.8
    messageFrame.BorderSizePixel = 0
    messageFrame.Size = UDim2.new(1, -10, 0, 40)
    messageFrame.Parent = scrollFrame

    local timestampLabel = Instance.new("TextLabel")
    timestampLabel.Name = "TimestampLabel" -- Ensure the name is correct
    timestampLabel.Size = UDim2.new(0, 60, 1, 0)
    timestampLabel.Position = UDim2.new(0, 5, 0, 0)
    timestampLabel.BackgroundTransparency = 1
    timestampLabel.Font = Enum.Font.GothamBold
    timestampLabel.TextSize = 14
    timestampLabel.TextXAlignment = Enum.TextXAlignment.Left
    timestampLabel.TextColor3 = Color3.fromRGB(200, 200, 200) -- Lighter gray for better visibility
    timestampLabel.Text = "[" .. os.date("%H:%M:%S") .. "]"
    timestampLabel.Parent = messageFrame

    local messageLabel = Instance.new("TextLabel")
    messageLabel.Name = "MessageLabel"
    messageLabel.Size = UDim2.new(1, -80, 1, 0)
    messageLabel.Position = UDim2.new(0, 70, 0, 0)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextSize = 14
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextWrapped = true

    if messageType == "print" then
        messageLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White
        messageFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        messageLabel.Text = message
    elseif messageType == "warn" then
        messageLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow
        messageFrame.BackgroundColor3 = Color3.fromRGB(60, 50, 20)
        messageLabel.Text = message
    elseif messageType == "error" then
        messageLabel.TextColor3 = Color3.fromRGB(255, 100, 100) -- Light red for better visibility
        messageFrame.BackgroundColor3 = Color3.fromRGB(60, 20, 20)
        messageLabel.Text = message
    end

    messageLabel.Parent = messageFrame

    -- Calculate and adjust size based on text content
    local textSize = TextService:GetTextSize(message, messageLabel.TextSize, messageLabel.Font, Vector2.new(scrollFrame.AbsoluteSize.X - 100, math.huge))
    local newHeight = math.max(textSize.Y + 10, 40) -- Ensure a minimum height of 40 pixels for each frame
    messageFrame.Size = UDim2.new(1, -10, 0, newHeight)

    -- Adjust label sizes to fit the calculated height
    timestampLabel.Size = UDim2.new(0, 60, 0, newHeight)
    messageLabel.Size = UDim2.new(1, -80, 0, newHeight)

    -- Add a copy button to copy the log text to clipboard
    local copyButton = Instance.new("TextButton")
    copyButton.Size = UDim2.new(0, 20, 0, newHeight - 10)
    copyButton.Position = UDim2.new(1, -25, 0.5, -(newHeight / 2) + 5)
    copyButton.BackgroundTransparency = 1
    copyButton.TextColor3 = Color3.fromRGB(200, 200, 200)
    copyButton.Font = Enum.Font.SourceSansBold
    copyButton.TextSize = 16
    copyButton.TextXAlignment = Enum.TextXAlignment.Center
    copyButton.TextYAlignment = Enum.TextYAlignment.Center
    copyButton.Text = "ðŸ“‹" -- Clipboard emoji icon for copying text
    copyButton.Parent = messageFrame

    copyButton.MouseButton1Click:Connect(function()
        setclipboard(message) -- Copy the log text to clipboard when clicked
    end)

    -- Parent the frame and update scrolling canvas size dynamically
    local listLayout = scrollFrame.UIListLayout or scrollFrame:FindFirstChildOfClass("UIListLayout")

    if listLayout then
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 10)
    end
    scrollFrame.CanvasPosition = Vector2.new(0, listLayout.AbsoluteContentSize.Y - scrollFrame.AbsoluteWindowSize.Y)
end

-- Function to copy all messages
local function CopyAllMessages()
    local scrollFrame = game.Players.LocalPlayer.PlayerGui.ModernDebugPanel.MainFrame.ScrollFrame
    local allMessages = ""

    for _, child in ipairs(scrollFrame:GetChildren()) do
        if child:IsA("Frame") then
            local timestampLabel = child:FindFirstChild("TimestampLabel") -- The timestamp label
            local messageLabel = child:FindFirstChild("MessageLabel") -- The message label

            if timestampLabel and messageLabel then
                allMessages = allMessages .. timestampLabel.Text .. " " .. messageLabel.Text .. "\n"
            end
        end
    end

    if allMessages ~= "" then
        setclipboard(allMessages)
    end
end

-- Create the UI
local function SetupDebugUI()
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- Check if the GUI already exists
    if not playerGui:FindFirstChild("ModernDebugPanel") then
        local debugUI = CreateDebugUI()

        -- Setup button functionality
        local function SetupButtons()
            local actionFrame = debugUI.MainFrame.ActionFrame

            actionFrame.PrintButton.MouseButton1Click:Connect(function()
                print("This is a test print Message")
            end)

            actionFrame.WarnButton.MouseButton1Click:Connect(function()
                warn("This is a test warning Message")
            end)

            actionFrame.ClearButton.MouseButton1Click:Connect(function()
                local scrollFrame = debugUI.MainFrame.ScrollFrame
                for _, child in ipairs(scrollFrame:GetChildren()) do
                    if child:IsA("Frame") then
                        child:Destroy()
                    end
                end
                scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            end)

            actionFrame["Copy AllButton"].MouseButton1Click:Connect(CopyAllMessages)
        end

        SetupButtons()

        -- Make the frame draggable
        local function EnableDragging(frame)
            local dragging
            local dragInput
            local dragStart
            local startPos

            local function update(input)
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end

            frame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = frame.Position

                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            frame.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)

            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)
        end

        EnableDragging(debugUI.MainFrame)

        -- Animate the panel when it appears
        local function AnimatePanel()
            local frame = debugUI.MainFrame
            local goal = {}
            goal.Position = UDim2.new(0.75, -250, 0.5, -200) -- Slide in from the right

            local info = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

            local tween = TweenService:Create(frame, info, goal)

            tween:Play()
        end

        AnimatePanel()
    end
end

-- Connect to LogService to capture all outputs
LogService.MessageOut:Connect(function(message, messageType)
    if messageType == Enum.MessageType.MessageError then
        AddDebugMessage(message, "error")
    elseif messageType == Enum.MessageType.MessageWarning then
        AddDebugMessage(message, "warn")
    else
        AddDebugMessage(message, "print")
    end
end)

-- Ensure the GUI is created when the player respawns
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        SetupDebugUI()
    end)
end)

-- Initial setup for the local player
SetupDebugUI()
